//sliding window og concept
class Solution {
  public:
    int findMaxSum(int n, int m, vector<vector<int>> mat) {
        // code here
        int ans=0;
        int x=0, y=0;
        while(x+3<=n && y+3<=m)
        {
            int count=1, sum=0;
            for(int i=x; i<x+3; i++)
            {
                for(int j=y; j<y+3; j++)
                {
                    if(count==4 || count==6)
                    {
                        count++;
                        continue;
                    }
                    sum+=mat[i][j];
                    count++;
                }
            }
            ans=max(ans,sum);
            if(y+4<=m)
            {
                y++;
            }
            else
            {
                x++;
                y=0;
            }
        }

        return (ans==0) ? -1 : ans;
    }
};

//optimal approach

class Solution {
  public:
    int findMaxSum(int n, int m, vector<vector<int>> mat) {
        // code here
        int ans=-1;
        for(int i=0; i<n-2; i++)
        {
            for(int j=0; j<m-2; j++)
            {
                int sum = mat[i][j]+mat[i][j+1]+mat[i][j+2]
                                +mat[i+1][j+1]
                          +mat[i+2][j]+mat[i+2][j+1]+mat[i+2][j+2];
                ans=max(ans,sum);
            }
        }
        return ans;
    }
};
