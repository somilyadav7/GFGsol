class Solution {
  public:
    int help(vector<vector<int>> &mat, int i, int j, int &maxi, vector<vector<int>> &dp)
    {
        if(i>=mat.size() || j>=mat[0].size())
            return 0;
        if(dp[i][j]!=-1)
            return dp[i][j];
        int right=help(mat,i,j+1,maxi,dp);
        int diagonal=help(mat,i+1,j+1,maxi,dp);
        int down=help(mat,i+1,j,maxi,dp);
        if(mat[i][j]==1)
        {
            int ans=1+min(down,min(right,diagonal));
            maxi=max(maxi,ans);
            return dp[i][j]=ans;
        }
        else
            return dp[i][j]=0;
    }
  
    int maxSquare(int n, int m, vector<vector<int>> &mat) {
        // code here
        int maxi=0;
        vector<vector<int>> dp(n, vector<int>(m,-1));
        help(mat,0,0,maxi,dp);
        return maxi;
    }
};
