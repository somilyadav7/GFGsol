class Solution {
  public:
    // Function to return a list containing the DFS traversal of the graph.
    void dfs(int x, vector<int> adj[], vector<int> &vis,int V, vector<int> &result)
    {
        result.push_back(x);
        vis[x]=1;
        for(auto i:adj[x])
        {
            if(!vis[i])
            {
                //cout << i << " ";
                dfs(i,adj,vis,V,result);
            }
        }
    }
    
    vector<int> dfsOfGraph(int V, vector<int> adj[]) 
    {
        // Code here
        vector<int> vis(V,0);
        vector<int> result;
        for(int i=0; i<V; i++)
        {
            if(!vis[i])
                dfs(0,adj,vis,V,result);

        }
        return result;
    }
};
