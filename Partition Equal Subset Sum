class Solution{
public:
    int f(int ind, int target,int arr[], vector<vector<int>> &dp)
    {
        if(target==0)
            return 1;
        if(ind==0)
            return arr[0]==target;
        if(dp[ind][target]!=-1)
            return dp[ind][target];
            
        int notTake = f(ind-1,target,arr,dp);
        int take = 0;
        if(target>=arr[ind])
            take = f(ind-1,target-arr[ind],arr,dp);
        return dp[ind][target] = take | notTake;
    }

    int equalPartition(int n, int arr[])
    {
        // code here
        int sum=0;
        for(int i=0; i<n; i++)
        {
            sum += arr[i];
        }
        if(sum%2!=0)
            return 0;
        else
        {
            vector<vector<int>> dp(n,vector<int>(sum/2+1,-1));
            return f(n-1,sum/2,arr,dp);
        }
    }
};
